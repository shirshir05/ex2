  n_patterns = 20 * self.measure.pattern(list_move)  # 0 - 60
        box_in_dock = self.measure.count_left_box(game, level, "*")  # 0 - 30
        # position_worker = game.worker(level)
        # bfs_path = 20 * BFS.bfs(game.matrix, level, (position_worker[1], position_worker[0]))
        number_box_move = 10 * self.measure.box_move(game, level)   # 0 - 20
        box_deadlock = self.measure.box_deadlock(game, level)    # 0 - 20
        return -number_box_move - box_in_dock + box_deadlock + n_patterns
        # distance_sum = self.measure.euclidean_distance(game, ".", level)